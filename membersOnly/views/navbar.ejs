<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<style>
    body{
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        background: linear-gradient(135deg, #262626 0%, #352b3f 100%);
        min-height: 100vh;
        display: flex;
        justify-content: center;
        padding-top: 60px;
    }
    .NavBar{
        position: fixed;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        top: 30px;
        border-radius: 50px;
        border: 1px solid rgba(0, 0, 0, 0.1);
        padding: 12px 30px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        z-index: 1000;
    }
    .NavBar:hover{
        transform: translateY(-2px);
        box-shadow: 0 5px 20px rgba(134, 131, 131, 0.15);
    }
   .navcon {
        display: flex;
        gap: 40px;
        align-items: center;
    }
    label{
        color: white;
    }
    form{
        display: block;
        width: 100%;
        max-width: 450px;
        border: none;
    }
    a {
        text-decoration: none;
        padding: 10px 24px;
        border-radius: 25px;
        color: greenyellow;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        background: rgba(255, 255, 255, 0.15);
    }
    a::before {
        container: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.2);
        transition: left 0.3s ease;
        z-index: -1;
    }
    a:hover::before {
        left: 0;
    }
    a:hover {
        transform: scale(1.05);
        color: #a8ff78;
    }
    a:last-child{
        background: linear-gradient(135deg, #a8ff78 0%, #78ffd6 100%);
        color: #333;
        font-weight: 700;
    }
    a:last-child:hover {
        color: #000;
        box-shadow: 0 4px 15px rgba(168, 255, 120, 0.4);
    }
    .ctn{
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 999;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);  
        display: flex;
        flex-direction: column;
        transition: opacity 0.3s ease;
        justify-content: center;
        align-items: center;
        opacity: 0;
        width: 100%;
        height: 100%;
    }
    .ctn.show {
        opacity: 1;
    }

    input[type='text'],
    input[type='password']{
        width: 100%;
        border: none;
        margin-bottom: 14px;

    }

</style>
<body>
    <nav class="NavBar">
        <div class="navcon">
            <a href="/">Home</a>
            <a href="#" onclick="addLogin()">
                Login
            </a>
            <a href="/signup">
                Sign up
            </a>
            
        </div>
    </nav>
</body>
</html>

<script>
    function addLogin() {
        const existingOverlay = document.querySelector('.ctn');
        if (existingOverlay) {
            existingOverlay.remove();
            document.body.style.overflow = '';
            return;
        }
        const container = document.createElement('div');
        const closeButton = document.createElement('button');
        container.classList.add('ctn');
        closeButton.classList.add('cls-button');
        closeButton.textContent = 'x';
        container.innerHTML =  
        `
        <form method="POST"> 
            <label>
                Email:
            </label>
            <input required type="text" name="email" /> </br>
            <label>
                Password:
            </label>
                <input required type="password" name="password"/> </br>
        </form>
        `
        
        closeButton.addEventListener('click', (e) => {
            e.stopPropagation();
            removeLogin();
        })
        
        container.addEventListener('click', (e) => {
            if(e.target ===  container){
                removeLogin();
            }
        })
        container.append(closeButton);
        document.body.appendChild(container);

        document.body.style.overflow = 'hidden';
        
        requestAnimationFrame(() => {
            container.classList.add('show');
        })
    }

    function removeLogin() {
        const container = document.querySelector(".ctn");

        if(!container){
            return;
        }

        container.classList.remove('show');

        setTimeout(() => {
           if(container && container.parentNode){
            document.body.removeChild(container);
           } 
        }, 100);
    }



</script>